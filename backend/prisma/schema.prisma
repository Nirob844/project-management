generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(uuid())
    email         String    @unique
    password      String
    name          String
    role          Role      @default(USER)
    avatar        String?
    isActive      Boolean   @default(true)
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    projects      Project[] @relation("ProjectMembers")
    ownedProjects Project[] @relation("ProjectOwner")
    tasks         Task[]    @relation("TaskAssignee")
    createdTasks  Task[]    @relation("TaskCreator")
    comments      Comment[]
}

model Project {
    id          String    @id @default(uuid())
    name        String
    description String?
    status      Status    @default(ACTIVE)
    startDate   DateTime?
    endDate     DateTime?
    progress    Float     @default(0)
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    owner       User      @relation("ProjectOwner", fields: [ownerId], references: [id])
    ownerId     String
    members     User[]    @relation("ProjectMembers")
    tasks       Task[]
}

model Task {
    id           String    @id @default(uuid())
    title        String
    description  String?
    status       Status    @default(TODO)
    priority     Priority  @default(MEDIUM)
    dueDate      DateTime?
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
    project      Project   @relation(fields: [projectId], references: [id])
    projectId    String
    assignee     User?     @relation("TaskAssignee", fields: [assigneeId], references: [id])
    assigneeId   String?
    creator      User      @relation("TaskCreator", fields: [creatorId], references: [id])
    creatorId    String
    comments     Comment[]
    parentTask   Task?     @relation("TaskDependencies", fields: [parentTaskId], references: [id])
    parentTaskId String?
    subtasks     Task[]    @relation("TaskDependencies")
}

model Comment {
    id        String   @id @default(uuid())
    content   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    task      Task     @relation(fields: [taskId], references: [id])
    taskId    String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
}

enum Role {
    USER
    ADMIN
    PROJECT_MANAGER
}

enum Status {
    TODO
    IN_PROGRESS
    REVIEW
    DONE
    ARCHIVED
    ACTIVE
}

enum Priority {
    LOW
    MEDIUM
    HIGH
    URGENT
}
